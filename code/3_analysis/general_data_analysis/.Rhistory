annotation_umap$consensusTMB <- (coding_genes$external_gene_name[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)] %in% unique(unlist(ConsensusTMB_OV)))[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)]
plot_umap(umap_TCGA, factor(annotation_umap$replication, levels=c('FALSE', 'TRUE')))
plot_umap(umap_TCGA, factor(annotation_umap$consensusTMB))
## from file 0_preparing_files.R
clinical_tcga <- read.table("../files/clinical.cases_selection.2021-05-12/clinical.tsv", sep = "\t", fill = T, header = T)
matched_clinical <- clinical_tcga[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id)], clinical_tcga$case_submitter_id),]
wgd=read.table("../../../../CDA_in_Cancer/data/TCGA_WGD/Haase2019_TCGA.giScores.wgd.txt", header = T)
matched_wgs <- wgd$wgd[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)],
wgd$patient)]
exposures_TCGA <- readRDS("../../copy_number_analysis_organoids/data/Export-matrix_OV_Sigs_on_TCGA-OV_12112019.rds")
## clinical ov data
TCGA_genes <- readRDS("../../../../other_repos/cnsigs_Initial_submission/survival_analysis/from_ruben/survival_models/TCGA_OVBRCAonly_Exposures_and_BRCA_Status_plusGene.rds")
matched_exposures <- exposures_TCGA[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
rownames(exposures_TCGA)),]
matched_group_WGD <- cutree(cluster_fig1, k=2)[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
names(cutree(cluster_fig1, k=2)))]
matched_group_genes <- TCGA_genes[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
TCGA_genes$Sample)]
TCGA_genes
matched_queryGDC <- query_GDC$results[[1]][match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id),]
table(matched_queryGDC$type) ## only gene expression, as expected
ggplot(data.frame(umap_TCGA$layout, mean_counts=log(rowMeans(counts_DESeq_TCGA))),
aes(x=X1, y=X2, col=mean_counts))+geom_point()
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes)
colnames(df_umap_2)
## there seems to be a very clear split by the second umap component
ggplot(df_umap_2,
aes(x=X1, y=X2, col=type))+geom_point() ##
umap_2 <- umap(t(counts_DESeq_TCGA))
annotation_umap <- cbind.data.frame(Gene=rownames(counts_DESeq_TCGA))
annotation_umap$replication <- sapply(coding_genes$description, grepl, pattern = 'replication' )[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)]
annotation_umap$consensusTMB <- (coding_genes$external_gene_name[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)] %in% unique(unlist(ConsensusTMB_OV)))[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)]
plot_umap(umap_TCGA, factor(annotation_umap$replication, levels=c('FALSE', 'TRUE')))
plot_umap(umap_TCGA, factor(annotation_umap$consensusTMB))
## from file 0_preparing_files.R
clinical_tcga <- read.table("../files/clinical.cases_selection.2021-05-12/clinical.tsv", sep = "\t", fill = T, header = T)
matched_clinical <- clinical_tcga[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id)], clinical_tcga$case_submitter_id),]
wgd=read.table("../../../../CDA_in_Cancer/data/TCGA_WGD/Haase2019_TCGA.giScores.wgd.txt", header = T)
matched_wgs <- wgd$wgd[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)],
wgd$patient)]
exposures_TCGA <- readRDS("../../copy_number_analysis_organoids/data/Export-matrix_OV_Sigs_on_TCGA-OV_12112019.rds")
## clinical ov data
TCGA_genes <- readRDS("../../../../other_repos/cnsigs_Initial_submission/survival_analysis/from_ruben/survival_models/TCGA_OVBRCAonly_Exposures_and_BRCA_Status_plusGene.rds")
matched_exposures <- exposures_TCGA[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
rownames(exposures_TCGA)),]
matched_group_WGD <- cutree(cluster_fig1, k=2)[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
names(cutree(cluster_fig1, k=2)))]
matched_group_genes <- TCGA_genes[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
TCGA_genes$Sample)]
TCGA_genes
matched_queryGDC <- query_GDC$results[[1]][match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id),]
table(matched_queryGDC$type) ## only gene expression, as expected
ggplot(data.frame(umap_TCGA$layout, mean_counts=log(rowMeans(counts_DESeq_TCGA))),
aes(x=X1, y=X2, col=mean_counts))+geom_point()
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes)
colnames(df_umap_2)
## there seems to be a very clear split by the second umap component
ggplot(df_umap_2,
aes(x=X1, y=X2, col=type))+geom_point() ##
set.seed(1325)
umap_2 <- umap(t(counts_DESeq_TCGA))
annotation_umap <- cbind.data.frame(Gene=rownames(counts_DESeq_TCGA))
annotation_umap$replication <- sapply(coding_genes$description, grepl, pattern = 'replication' )[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)]
annotation_umap$consensusTMB <- (coding_genes$external_gene_name[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)] %in% unique(unlist(ConsensusTMB_OV)))[match(rownames(counts_DESeq_TCGA), coding_genes$ensembl_gene_id)]
plot_umap(umap_TCGA, factor(annotation_umap$replication, levels=c('FALSE', 'TRUE')))
plot_umap(umap_TCGA, factor(annotation_umap$consensusTMB))
## from file 0_preparing_files.R
clinical_tcga <- read.table("../files/clinical.cases_selection.2021-05-12/clinical.tsv", sep = "\t", fill = T, header = T)
matched_clinical <- clinical_tcga[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id)], clinical_tcga$case_submitter_id),]
wgd=read.table("../../../../CDA_in_Cancer/data/TCGA_WGD/Haase2019_TCGA.giScores.wgd.txt", header = T)
matched_wgs <- wgd$wgd[match(query_GDC$results[[1]]$cases.submitter_id[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)],
wgd$patient)]
exposures_TCGA <- readRDS("../../copy_number_analysis_organoids/data/Export-matrix_OV_Sigs_on_TCGA-OV_12112019.rds")
## clinical ov data
TCGA_genes <- readRDS("../../../../other_repos/cnsigs_Initial_submission/survival_analysis/from_ruben/survival_models/TCGA_OVBRCAonly_Exposures_and_BRCA_Status_plusGene.rds")
matched_exposures <- exposures_TCGA[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
rownames(exposures_TCGA)),]
matched_group_WGD <- cutree(cluster_fig1, k=2)[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
names(cutree(cluster_fig1, k=2)))]
matched_group_genes <- TCGA_genes[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
TCGA_genes$Sample)]
TCGA_genes
matched_queryGDC <- query_GDC$results[[1]][match(colnames(counts_DESeq_TCGA),
query_GDC$results[[1]]$id),]
table(matched_queryGDC$type) ## only gene expression, as expected
ggplot(data.frame(umap_TCGA$layout, mean_counts=log(rowMeans(counts_DESeq_TCGA))),
aes(x=X1, y=X2, col=mean_counts))+geom_point()
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes)
colnames(df_umap_2)
## there seems to be a very clear split by the second umap component
ggplot(df_umap_2,
aes(x=X1, y=X2, col=type))+geom_point() ##
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA['ENSG00000175054',]),
aes(x=X1, y=X2, col=gene))+geom_point() ## not separated by ATR
to_ens <- function(i){
t2g$ensembl_gene_id[match(i, t2g$external_gene_name)]
}
to_ens('ESR1')
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('ESR1'),]),
aes(x=X1, y=X2, col=gene))+geom_point() ## not separated by
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('PGR'),]),
aes(x=X1, y=X2, col=gene))+geom_point() ## not separated by PR
## clinical ov data
consensusTME <- readRDS("../../../../CDA_in_Cancer/data/consensusTME/cancerAll.rda")
## clinical ov data
load("../../../../CDA_in_Cancer/data/consensusTME/cancerAll.rda")
consensusTME <- cancerAll
consensusTME
consensusTME2 <- allgenes
consensusTME2
install.packages("devtools")
devtools::install_github("cansysbio/ConsensusTME")
library(ConsensusTME)
counts_DESeq_TCGA
counts_DESeq_TCGA_raw
counts_DESeq_TCGA
#consensusTME
consensusTME_analysis <- ConsensusTME::consensusTMEAnalysis(counts_DESeq_TCGA_raw)
#consensusTME
consensusTME_analysis <- ConsensusTME::consensusTMEAnalysis(counts_DESeq_TCGA_raw, cancerType = "OV")
counts_DESeq_TCGA_raw
#consensusTME
change_rownames <- function(i){
rownames(i) = t2g[match(gsub("\\..*","",rownames(i)), t2g$ensembl_gene_id),]
i
}
consensusTME_analysis <- ConsensusTME::consensusTMEAnalysis(change_rownames(counts_DESeq_TCGA_raw), cancerType = "OV")
change_rownames(counts_DESeq_TCGA_raw)
#consensusTME
change_rownames <- function(i){
rownames(i) = t2g$external_gene_name[match(gsub("\\..*","",rownames(i)), t2g$ensembl_gene_id)]
i
}
consensusTME_analysis <- ConsensusTME::consensusTMEAnalysis(change_rownames(counts_DESeq_TCGA_raw), cancerType = "OV")
consensusTME_analysis
matched_group_genes <- consensusTME_analysis
matched_group_genes
df_umap_2
rownames(df_umap_2)
rownames(df_umap_2)==colnames(matched_group_genes)
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes,
consensusTME=t(matched_group_genes))
t(matched_group_genes)
matched_group_genes
df_umap_2
t(matched_group_genes)
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes,
consensusTME=t(matched_group_genes))
dim(t(matched_group_genes))
dim(matched_group_genes)
matched_group_genes <- TCGA_genes[match(substring(query_GDC$results[[1]]$cases[match(colnames(counts_DESeq_TCGA), query_GDC$results[[1]]$id)], 1, 12),
TCGA_genes$Sample)]
matched_consensusTME <- consensusTME_analysis
matched_consensusTME
dim(matched_consensusTME)
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes,
consensusTME=t(matched_group_genes))
colnames(df_umap_2)
## there seems to be a very clear split by the second umap component
ggplot(df_umap_2,
aes(x=X1, y=X2, col=type))+geom_point() ##
colnames(df_umap_2)
matched_group_genes
matched_consensusTME
df_umap_2 <- data.frame(umap_2$layout, mean_exprs=log(colMeans(counts_DESeq_TCGA)),
matched_clinical,WGD=matched_wgs,matched_queryGDC,
matched_exposures,
group_clr=matched_group_WGD,
genes=matched_group_genes,
consensusTME=t(matched_consensusTME))
colnames(df_umap_2)
ggplot(df_umap_2,
aes(x=X1, y=X2, col=consensusTME.Immune_Score))+geom_point() ##
ggplot(df_umap_2,
aes(x=X1, y=X2, col=consensusTME.B_cells))+geom_point() ##
ggplot(df_umap_2,
aes(x=X1, y=X2, col=consensusTME.Fibroblasts))+geom_point() ##
pheatmap::pheatmap(top_umap_DE,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
table(results_DE_umap$padj < 0.00000001)
results_DE_umap[(results_DE_umap$padj < 0.00000001),]
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('RECQL'),]),
aes(x=X1, y=X2, col=gene))+geom_point() ## not separated by RECQL
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('RECQL'),]),
aes(x=X1, y=X2, col=log(gene)))+geom_point() ## not separated by RECQL
results_DE_cluster
head(results_DE_umap[sort(results_DE_umap$padj, decreasing = F),])
head(results_DE_umap[order(results_DE_umap$padj, decreasing = F),])
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('RNVU1-7'),]),
aes(x=X1, y=X2, col=log(gene)))+geom_point()
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('RNVU1-18'),]),
aes(x=X1, y=X2, col=log(gene)))+geom_point()
ggplot(cbind(df_umap_2, gene=counts_DESeq_TCGA[to_ens('AL355075.4'),]),
aes(x=X1, y=X2, col=log(gene)))+geom_point()
pheatmap::pheatmap(top_umap_DE,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
top_umap_DE <- change_rownames((DESeq2::counts(mat, normalized=F)[which(results_DE_umap$padj < 0.000000001),]))
# rownames(top_umap_DE) <- t2g$external_gene_name[match(gsub("\\..*","",rownames(top_umap_DE)), t2g$ensembl_gene_id)]
pheatmap::pheatmap(top_umap_DE,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
top_umap_DE2 <- change_rownames(head((DESeq2::counts(mat, normalized=F)[order(results_DE_umap$padj,])), n=100)
top_umap_DE2 <- change_rownames(head((DESeq2::counts(mat, normalized=F)[order(results_DE_umap$padj,]), n=100)))
top_umap_DE2 <- change_rownames(head((DESeq2::counts(mat, normalized=F)[order(results_DE_umap$padj),], n=100)))
DESeq2::counts(mat, normalized=F)[order(results_DE_umap$padj),]
top_umap_DE2 <- change_rownames(head(DESeq2::counts(mat, normalized=F)[order(results_DE_umap$padj),], n=100))
pheatmap::pheatmap(top_umap_DE2,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
top_umap_DE2 <- change_rownames(head(DESeq2::counts(mat, normalized=T)[order(results_DE_umap$padj),], n=100))
pheatmap::pheatmap(top_umap_DE2,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
top_umap_DE2 <- change_rownames(head(DESeq2::counts(mat, normalized=T)[order(results_DE_umap$padj),], n=35))
pheatmap::pheatmap(top_umap_DE2,
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
top_umap_DE2
pheatmap::pheatmap(log(top_umap_DE2),
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
pheatmap::pheatmap(log(top_umap_DE2+0.001),
annotation_col = groups_umap, cluster_cols = T, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
pheatmap::pheatmap(log(top_umap_DE2+0.001),
annotation_col = groups_umap, cluster_cols = F, scale = "row",
main = 'Genes with adjusted p-value < 0.05', show_colnames = FALSE)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
enough_samples
names(signature_roo)
signature_roo
signature_roo
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_roo
names(signature_roo)
enough_samples
signature_roo <- signature_roo[match(enough_samples, names(names(signature_roo))]
signature_roo <- signature_roo[match(enough_samples, names(names(signature_roo)))]
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_roo <- signature_roo[match(enough_samples, names(names(signature_roo)))]
signature_mutsigextractor_roo <- sapply(signature_mutsigextractor_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_mutsigextractor_roo) <- gsub("_signaturesmutSigExtractor_ROO.RDS", "", basename(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)]))
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[sapply(signature_mutsigextractor_roo, typeof) == "list"]
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[match(enough_samples, names(names(signature_mutsigextractor_roo)))]
signature_roo
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_roo
match(enough_samples, names(names(signature_roo)))
signature_roo <- signature_roo[match(enough_samples, names(signature_roo))]
signature_roo
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_roo <- signature_roo[match(enough_samples, names(signature_roo))]
signature_mutsigextractor_roo <- sapply(signature_mutsigextractor_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_mutsigextractor_roo) <- gsub("_signaturesmutSigExtractor_ROO.RDS", "", basename(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)]))
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[sapply(signature_mutsigextractor_roo, typeof) == "list"]
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[match(enough_samples, names(signature_mutsigextractor_roo))]
signature_roo
signature_roo_all <- do.call('rbind', signature_roo)
signature_roo_all_umap <- umap(signature_roo_all)
library(umap)
signature_roo_all
signature_roo_all
signature_roo
signature_roo_all <- do.call('rbind', sapply(signature_roo, function(i) do.call('rbind', i)))
signature_roo[[1]]
i=signature_roo[[1]]
do.call('rbind', i)
signature_roo_all <- do.call('rbind', lapply(signature_roo, function(i) do.call('rbind', i)))
signature_roo_all <- sapply(signature_roo, function(i) do.call('rbind', i))
i=signature_roo[[3]]
do.call('rbind', i)
lapply(signature_roo, function(i) do.call('rbind', i))
signature_roo_all <- lapply(signature_roo, function(i) do.call('rbind.data.frame', i))
signature_roo_all <- lapply(signature_roo, function(i) rbind(i[[1]], i[[2]]))
signature_roo_all
signature_roo_all <- sapply(signature_roo, function(i) rbind(i[[1]], i[[2]]))
signature_roo_all
signature_roo_all <- do.call('rbind', lapply(signature_roo, function(i) rbind(i[[1]], i[[2]])))
signature_roo_all
signature_roo_all_umap <- umap(signature_roo_all)
signature_roo_all_umap$data
signature_roo_all_umap$layout
head(signature_roo_all_umap$layout)
plot(signature_roo_all_umap$layout[,1:2])
signature_roo
sapply(signature_roo, function(i) nrow(i)*2)
signature_roo[[1]]
sapply(signature_roo, function(i) nrow(i[[1]])*2)
rep(names(signature_roo), sapply(signature_roo, function(i) nrow(i[[1]])*2))
sapply(signature_roo, function(i) nrow(i[[1]])*2)
as.vector(sapply(signature_roo, function(i) nrow(i[[1]])*2))
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2))))
)
rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))
unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)
)
names(signature_roo)
rep(names(signature_roo), as.vector(unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2))))
as.vector(unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))
length(as.vector(unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2))))
length(signature_roo)
length(signature_roo)
sapply(signature_roo, function(i) nrow(i[[1]])*2)
enough_samples
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(umap)
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[match(enough_samples, names(signature_roo))]
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_mutsigextractor_roo <- sapply(signature_mutsigextractor_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_mutsigextractor_roo) <- gsub("_signaturesmutSigExtractor_ROO.RDS", "", basename(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)]))
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[match(enough_samples, names(signature_mutsigextractor_roo))]
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[sapply(signature_mutsigextractor_roo, typeof) == "list"]
signature_roo_all <- do.call('rbind', lapply(signature_roo, function(i) rbind(i[[1]], i[[2]])))
signature_roo_all_umap <- umap(signature_roo_all)
rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2))
)
head(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))))
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+geom_point()
library(RColorBrewer)
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector
length(signature_roo)
n <- length(signature_roo)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
names(length(signature_roo)) = names(signature_roo)
names(signature_roo) = names(signature_roo)
signature_roo
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(umap)
library(RColorBrewer)
fles_roo <- list.files("../../../data/roo/", full.names = T)
enough_samples = readLines("~/Desktop/CT_sufficient_samples.txt")
signature_roo <- sapply(fles_roo[grepl('_signatures_', fles_roo)], readRDS)
signature_mutsigextractor_roo <- sapply(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)], readRDS)
signature_roo <- sapply(signature_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_roo) <- gsub("_signatures_ROO.RDS", "", basename(fles_roo[grepl('_signatures_', fles_roo)]))
signature_roo <- signature_roo[match(enough_samples, names(signature_roo))]
signature_roo <- signature_roo[sapply(signature_roo, typeof) == "list"]
signature_mutsigextractor_roo <- sapply(signature_mutsigextractor_roo, function(i) try(slot(i, 'count_matrices_all')))
names(signature_mutsigextractor_roo) <- gsub("_signaturesmutSigExtractor_ROO.RDS", "", basename(fles_roo[grepl('_signaturesmutSigExtractor_', fles_roo)]))
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[match(enough_samples, names(signature_mutsigextractor_roo))]
signature_mutsigextractor_roo <- signature_mutsigextractor_roo[sapply(signature_mutsigextractor_roo, typeof) == "list"]
signature_roo_all <- do.call('rbind', lapply(signature_roo, function(i) rbind(i[[1]], i[[2]])))
signature_roo_all_umap <- umap(signature_roo_all)
n <- length(signature_roo)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
names(col_vector) = names(signature_roo)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+geom_point()+
scale_color_manual(values = col_vector)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+geom_point()+facet_wrap(.~ct)+
scale_color_manual(values = col_vector)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+geom_point()+facet_wrap(.~ct)+
geom_point(data=cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=NA))+
scale_color_manual(values = col_vector)
cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2]
)
sapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+geom_point()+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))))+
scale_color_manual(values = col_vector)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))),
col='black', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))),
col='black', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()
ggplot(cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggsave("../../../results/exploratory/umap_exposures.pdf")
ggsave("../../../results/exploratory/umap_exposures.pdf", height = 7, width = 7)
ggsave("../../../results/exploratory/umap_exposures.pdf", height = 8, width = 8)
ggsave("../../../results/exploratory/umap_exposures.pdf", height = 9, width = 9)
signature_roo_all_mutsigextractor <- do.call('rbind', lapply(signature_roo, function(i) rbind(i[[1]], i[[2]])))
signature_roo_all_mutsigextractor_umap <- umap(signature_roo_all_mutsigextractor)
ggplot(cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggsave("../../../results/exploratory/umap_exposures_mutsigextractor.pdf", height = 9, width = 9)
signature_roo_all_mutsigextractor <- do.call('rbind', lapply(signature_mutsigextractor_roo, function(i) rbind(i[[1]], i[[2]])))
signature_roo_all_mutsigextractor_umap <- umap(signature_roo_all_mutsigextractor)
ggplot(cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggsave("../../../results/exploratory/umap_exposures_mutsigextractor.pdf", height = 9, width = 9)
ggplot(cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=rep(names(signature_roo), unlist(sapply(signature_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggplot(cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=rep(names(signature_mutsigextractor_roo), unlist(sapply(signature_mutsigextractor_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_roo), function(i) cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggplot(cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=rep(names(signature_mutsigextractor_roo), unlist(sapply(signature_mutsigextractor_roo, function(i) nrow(i[[1]])*2)))),
aes(x=umap.1, y=umap.2, col=ct))+facet_wrap(.~ct)+
geom_point(data=do.call('rbind', lapply(names(signature_mutsigextractor_roo), function(i) cbind.data.frame(umap=signature_roo_all_mutsigextractor_umap$layout[,1:2], ct=i))),
col='gray', alpha=0.2)+
geom_point()+
scale_color_manual(values = col_vector)+guides(col=FALSE)+theme_bw()+labs(x='UMAP dimension #1',
y='UMAP dimension #2')
ggsave("../../../results/exploratory/umap_exposures_mutsigextractor.pdf", height = 9, width = 9)
