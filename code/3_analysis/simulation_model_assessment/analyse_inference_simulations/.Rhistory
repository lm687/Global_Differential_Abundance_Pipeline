geom_point(data=genes_of_interest_df, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(data=genes_of_interest_df, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$value_DM
table(disjoined_GR2_genes_merged_df$value_DM)
disjoined_GR2_genes$value_DM
table(disjoined_GR2_genes$value_DM)
disjoined_GR2_genes
disjoined_GR2_genes_merged <- unlist(reduce(split(disjoined_GR2_genes, ~value_DM)))
disjoined_GR2_genes_merged
as.numeric(names(disjoined_GR2_genes_merged))
max()
max(as.numeric(names(disjoined_GR2_genes_merged)))
disjoined_GR2_genes_merged$value_DM <- as.numeric(names(disjoined_GR2_genes_merged))
names(disjoined_GR2_genes_merged) <- NULL
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df$value_DM
max(disjoined_GR2_genes_merged_df$value_DM)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df$seqnames <- factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames)))
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(1:21, 'X', 'Y') ,]
max(disjoined_GR2_genes_merged_df$value_DM)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df$seqnames <- factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames)))
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(data=genes_of_interest_df, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df$seqnames <- paste0('chr', genes_of_interest_df$seqnames)
genes_of_interest_df <- as(genes_of_interest, 'data.frame')
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$seqnames
genes_of_interest_df_chr$seqnames
dev.off()
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
ggplot(disjoined_GR_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
disjoined_GR2_genes_merged_df$seqnames <- factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames)))
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
evels(disjoined_GR2_genes_merged_df$seqnames)
gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames))
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames)))
unique(factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames))))
disjoined_GR2_genes_merged_df$seqnames <- factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(disjoined_GR2_genes_merged_df$seqnames)))
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
genes_of_interest_df_chr$seqnames
levels(disjoined_GR2_genes_merged_df$seqnames )
levels(genes_of_interest_df_chr$seqnames) <- levels(disjoined_GR2_genes_merged_df$seqnames )
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$seqnames
levels(disjoined_GR2_genes_merged_df$seqnames)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
disjoined_GR2_genes_merged_df$seqnames <- factor(disjoined_GR2_genes_merged_df$seqnames,
levels=gtools::mixedsort(levels(unique(disjoined_GR2_genes_merged_df$seqnames))))
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
levels(genes_of_interest_df_chr$seqnames) <- levels(disjoined_GR2_genes_merged_df$seqnames )
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$seqnames
unique(disjoined_GR2_genes_merged_df$seqnames)
levels(disjoined_GR2_genes_merged_df$seqnames)
gtools::mixedsort(levels(unique(disjoined_GR2_genes_merged_df$seqnames)))
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
gtools::mixedsort(levels(unique(disjoined_GR2_genes_merged_df$seqnames)))
gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames))
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
levels(disjoined_GR2_genes_merged_df$seqnames) <- gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames))
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
levels(genes_of_interest_df_chr$seqnames) <- levels(disjoined_GR2_genes_merged_df$seqnames )
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$seqnames
gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames))
levels(disjoined_GR2_genes_merged_df$seqnames)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames))
as.character(gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames)))
levels(disjoined_GR2_genes_merged_df$seqnames) <- as.character(gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames)))
droplevels(disjoined_GR2_genes_merged_df)
disjoined_GR2_genes_merged_df <- as(disjoined_GR2_genes_merged, 'data.frame')
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[with(disjoined_GR2_genes_merged_df, order(seqnames, start)), ]
disjoined_GR2_genes_merged_df <- disjoined_GR2_genes_merged_df[disjoined_GR2_genes_merged_df$seqnames %in% c(paste0('chr', c(1:21, 'X', 'Y'))) ,]
disjoined_GR2_genes_merged_df <- droplevels(disjoined_GR2_genes_merged_df)
levels(disjoined_GR2_genes_merged_df$seqnames) <- as.character(gtools::mixedsort(unique(disjoined_GR2_genes_merged_df$seqnames)))
genes_of_interest_df_chr <- genes_of_interest_df
genes_of_interest_df_chr$seqnames <- paste0('chr', genes_of_interest_df_chr$seqnames)
levels(genes_of_interest_df_chr$seqnames) <- levels(disjoined_GR2_genes_merged_df$seqnames )
levels(genes_of_interest_df_chr$seqnames)
levels(disjoined_GR2_genes_merged_df$seqnames )
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
disjoined_GR2_genes_merged_df$seqnames
genes_of_interest_df_chr$seqnames
genes_of_interest_df_chr$seqnames <- factor(genes_of_interest_df_chr$seqnames,
levels=levels(disjoined_GR2_genes_merged_df$seqnames ))
genes_of_interest_df_chr$seqnames
ggplot(disjoined_GR2_genes_merged_df)+
geom_segment(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_line(aes(x=start, xend=end, y=value_DM, yend=value_DM))+
geom_label_repel(data=genes_of_interest_df_chr, aes(x=start, y= 0, label=gene_name), size=3)+
geom_point(col='red', data=genes_of_interest_df_chr, aes(x=start, y= 0))+
facet_wrap(~seqnames, scales = "free")+theme_bw()
ggsave("~/Desktop/differential_methylation_HGSOC_relapse.pdf", height = 10, width = 10)
genes_of_interest_df_chr
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
multiple_runs = T
## multiple runs
# generation = "GenerationJnorm"
# generation = "GenerationK"
# generation = "GenerationK2"
# generation = "generationFnorm"
# generation = "GenerationCnorm"
# generation = "GenerationJnorm2"
generation = "GenerationJnorm3"
# generation = "GenerationJnormTwoLambdas"
# generation = "GenerationInoREtwolambdas"
# generation = "generationHnormtwolambdas"
# generation = "GenerationMixture1"
generation = "GenerationJnormTwoLambdasOneChangingBeta"
generation = "GenerationJnormBTwoLambdasOneChangingBeta"
source("../../../2_inference_TMB/helper_TMB.R")
source("../../../1_create_ROO/roo_functions.R")
library(grid)
library(gridExtra)
library(ggpubr)
library(reshape2)
library(jcolors)
library(cowplot)
library(ggrepel)
require( tikzDevice )
if(multiple_runs){
flder_out <- "../../../../results/results_TMB/simulated_datasets/mixed_effects_models_multiple/"
flder_in <- "../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/summaries_multiple/"
}else{
flder_out <- "../../../../results/results_TMB/simulated_datasets/mixed_effects_models/"
flder_in <- "../../../../data/assessing_models_simulation/inference_results/TMB/nlminb/summaries/"
}
manual = F
if(manual){
names1 <- paste0(flder_in, generation, "_fullREM_manual.RDS")
names2 <- paste0(flder_in, generation, "_fullREDMsinglelambda_manual.RDS")
names3 <- paste0(flder_in, generation, "_diagREDMsinglelambda_manual.RDS")
names4 <- paste0(flder_in, generation, "_diagREDM_manual.RDS")
runs_fullREM0 = readRDS(names1)
runs_fullREDMSL0 = readRDS(names2)
runs_diagREDMSL0 = readRDS(names3)
runs_diagREDM0 = readRDS(names3)
}else{
runs_fullREM0 = readRDS(paste0(flder_in, generation, "_fullREM.RDS"))
runs_fullREDMSL0 = readRDS(paste0(flder_in, generation, "_fullREDMsinglelambda.RDS"))
runs_diagREDMSL0 = readRDS(paste0(flder_in, generation, "_diagREDMsinglelambda.RDS"))
runs_diagREDM0 = readRDS(paste0(flder_in, generation, "_diagREDM.RDS"))
}
## match them all (wrt fullREM)
runs_fullREDMSL0 <- runs_fullREDMSL0[match(rownames(runs_fullREM0), rownames(runs_fullREDMSL0)),]
runs_diagREDMSL0 <- runs_diagREDMSL0[match(rownames(runs_fullREM0), rownames(runs_diagREDMSL0)),]
runs_diagREDM0 <- runs_diagREDM0[match(rownames(runs_fullREM0), rownames(runs_diagREDM0)),]
## Problem with convergence is acute in DM
table(is.na(runs_fullREM0$beta_est))
table(is.na(runs_fullREDMSL0$beta_est))
table(is.na(runs_diagREDMSL0$beta_est))
table(is.na(runs_diagREDM0$beta_est))
table((runs_fullREM0$converged))
table((runs_fullREDMSL0$converged))
table((runs_diagREDMSL0$converged))
table((runs_diagREDM0$converged))
barplot(c(runs_fullREM0=sum((runs_fullREM0$converged)),
runs_fullREDMSL0=sum((runs_fullREDMSL0$converged)),
runs_diagREDMSL0=sum((runs_diagREDMSL0$converged)),
runs_diagREDM0=sum((runs_diagREDM0$converged))))
image(cbind(runs_fullREM0=((runs_fullREM0$converged)),
runs_fullREDMSL0=((runs_fullREDMSL0$converged)),
runs_diagREDMSL0=((runs_diagREDMSL0$converged)),
runs_diagREDM0=((runs_diagREDM0$converged))))
runs_fullREM <- runs_fullREM0[runs_fullREM0$converged,]
runs_fullREDMSL <- runs_fullREDMSL0[runs_fullREDMSL0$converged,]
runs_diagREDMSL <- runs_diagREDMSL0[runs_diagREDMSL0$converged,]
runs_diagREDM <- runs_diagREDM0[runs_diagREDM0$converged,]
joint_df = cbind.data.frame(fullRE_M=runs_fullREM,
fullRE_DMSL=runs_fullREDMSL[match(rownames(runs_fullREM),
rownames(runs_fullREDMSL)),],
diagRE_DMSL=runs_diagREDMSL[match(rownames(runs_fullREM),
rownames(runs_diagREDMSL)),],
diagRE_DM=runs_diagREDM[match(rownames(runs_fullREM),
rownames(runs_diagREDM)),])
print(joint_df)
datasets_files = list.files("../../../../data/assessing_models_simulation/datasets/", full.names = TRUE)
datasets_files = datasets_files[grep(pattern = paste0('/multiple_', generation, '_'), datasets_files)]
length(datasets_files)
datasets = lapply(datasets_files, readRDS)
names(datasets) = unique(gsub("_dataset.RDS", "", basename(datasets_files)))
DA_bool = ( sapply(datasets, function(i) i$beta_gamma_shape) > 0 )
runs_ttest_irl = lapply(datasets_files, function(i)  try(wrapper_run_ttest_ilr(i)))
hist(as.numeric(runs_ttest_irl), breaks=30); table(sapply(runs_ttest_irl, typeof))
runs_ttest_props = lapply(datasets_files, function(i)  try(wrapper_run_ttest_props(i)))
hist(as.numeric(runs_ttest_props), breaks=30); table(sapply(runs_ttest_props, typeof))
table(sapply(runs_ttest_irl, typeof), sapply(runs_ttest_props, typeof))
pvals_runs_HMP = lapply(datasets_files, function(i)  try(wrapper_run_HMP_Xdc.sevsample(i)))
pvals_runs_HMP2 = lapply(datasets_files, function(i)  try(wrapper_run_HMP_Xmcupo.sevsample(i)))
table(sapply(pvals_runs_HMP, typeof), sapply(pvals_runs_HMP2, typeof))
pvals_ttest_ilr = as.numeric(unlist(runs_ttest_irl))
pvals_ttest_ilr_adj = pvals_ttest_ilr
pvals_perturbation =  unlist(sapply(lapply(datasets_files, function(i){.x <- readRDS(i);
aitchison_perturbation_test_alt_v2(.x$objects_counts, slot_name = "count_matrices_all")}), `[`, 'pval'))
pvals_permutation = unlist(lapply(datasets_files,  function(i){.x <- readRDS(i);
permutation_test_fun_wrapper(.x$objects_counts, nbootstraps=40)}))
pvals_chi_Harris <- sapply(datasets, function(i) iterative_chisqrt_wrapper(i$objects_counts) )
length(pvals_runs_HMP) == length(pvals_perturbation)
length(pvals_runs_HMP) == length(pvals_permutation)
## remove the last character because it determines what the row of the dataset is
names_datasets_uniq <- sort(unique(gsub(".RDS", "", names(datasets)))) #sort(unique(c(rownames(runs_fullREM0), rownames(runs_fullREDMSL0),
#             rownames(runs_diagREDMSL0), rownames(runs_diagREDM0))))
head(names_datasets_uniq)
names(datasets)
if(multiple_runs){
for(str_models in c('fullREM0', 'fullREDMSL0', 'diagREDMSL0', 'diagREDM0')){
assign(gsub('0', '', paste0('pvals_', str_models)),
get(paste0('runs_', str_models))[sapply(names_datasets_uniq,
function(i) grep(i, rownames(get(paste0('runs_', str_models))))[1]),'pvals_adj'])
assign(paste0('names(pvals_', gsub('0', '', str_models), ')'),
gsub("_dataset.*", "", rownames(get(paste0('runs_', str_models)))[unique(get(paste0('runs_', str_models))$idx)]))
get(paste0('pvals_', gsub('0', '', str_models)))
## remove p-vals of runs that didn't converge
if(sum(!sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])) > 0){
# if there is any non-converged run
cat('\nRemoving p-values of runs that did not converge in ', str_models, '\n')
# get(paste0('pvals_', gsub('0', '', str_models))[!sapply(unique(get(paste0('runs_', str_models))$idx),
#                                                           function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])])
print(typeof(get(paste0('pvals_', gsub('0', '', str_models)))))
print(length(sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])))
print(table(sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])))
print(length(get(paste0('pvals_', gsub('0', '', str_models)))))
## this below gave problems in only diagDM in GenerationK2, and I don't know why. I am now using the alternative that follows it
# assign(paste0('pvals_', gsub('0', '', str_models))[!sapply(unique(get(paste0('runs_', str_models))$idx),
#                                                            function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])], NA)
assign(paste0('get(pvals_', gsub('0', '', str_models), ')')[!sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])], NA)
}
get(paste0('pvals_', gsub('0', '', str_models)))
get(paste0('pvals_', gsub('0', '', (str_models))))[!sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])]
}
}else{
for(str_models in c('fullREM0', 'fullREDMSL0', 'diagREDMSL0', 'diagREDM0')){
assign(gsub('0', '', paste0('pvals_', str_models)), get(paste0('runs_', str_models))[sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) which(get(paste0('runs_', str_models))$idx == i)[1]),'pvals_adj'])
assign(paste0('names(pvals_', gsub('0', '', str_models), ')'),
gsub("_dataset.*", "", rownames(get(paste0('runs_', str_models)))[unique(get(paste0('runs_', str_models))$idx)]))
## remove p-vals of runs that didn't converge
assign(paste0('pvals_', gsub('0', '', str_models))[!sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])], NA)
get(paste0('pvals_', gsub('0', '', (str_models))))[!sapply(unique(get(paste0('runs_', str_models))$idx),
function(i) get(paste0('runs_', str_models))[(get(paste0('runs_', str_models))$idx == i),'converged'][1])]
}
}
all(names(pvals_fullREDMSL) == names(pvals_fullREM))
all(names(pvals_fullREDMSL) == names(pvals_diagREDM))
length(pvals_diagREDM)
length(pvals_fullREDMSL)
dim(runs_diagREDM0)
dim(runs_diagREDMSL0)
dim(runs_fullREDMSL0)
dim(runs_fullREM0)
if(length(pvals_fullREDMSL) != length(datasets)){
stop('The number of runs is not the number of datasets')
}
## p-values from my models are not adjusted for MT
pvals_data_frame=cbind.data.frame(pvals_fullREDMSL=pvals_fullREDMSL,
pvals_fullREM=pvals_fullREM,
pvals_diagREDMSL=pvals_diagREDMSL,
pvals_diagREDM=pvals_diagREDM,
ttest_props=unlist(runs_ttest_props),
pvals_chi_Harris=pvals_chi_Harris,
ttest_ilr_adj=pvals_ttest_ilr_adj,
HMP=unlist(pvals_runs_HMP),
HMP2=unlist(pvals_runs_HMP2),
perturbation=pvals_perturbation,
permutation=pvals_permutation,
true=DA_bool)
head(pvals_data_frame)
## select only runs that have converged for all models
DA_bool_all_converged <- DA_bool
DA_bool_all_converged[!(!is.na(pvals_fullREDMSL) & !is.na(pvals_fullREM) & !is.na(pvals_diagREDMSL) &
!is.na(pvals_diagREDM) & !is.na(pvals_chi_Harris) & !is.na(runs_ttest_props) &
!is.na(pvals_ttest_ilr_adj) & !is.na(pvals_runs_HMP) & !is.na(pvals_runs_HMP2) &
!is.na(pvals_perturbation) & !is.na(pvals_permutation))] <- NA
table(is.na(DA_bool_all_converged))
pvals_data_frame_all_converged = cbind.data.frame(pvals_fullREDMSL=pvals_fullREDMSL[!is.na(DA_bool_all_converged)],
pvals_fullREM=pvals_fullREM[!is.na(DA_bool_all_converged)],
pvals_diagREDMSL=pvals_diagREDMSL[!is.na(DA_bool_all_converged)],
pvals_diagREDM=pvals_diagREDM[!is.na(DA_bool_all_converged)],
ttest_props=unlist(runs_ttest_props)[!is.na(DA_bool_all_converged)],
pvals_chi_Harris=pvals_chi_Harris[!is.na(DA_bool_all_converged)],
ttest_ilr_adj=pvals_ttest_ilr_adj[!is.na(DA_bool_all_converged)],
HMP=unlist(pvals_runs_HMP)[!is.na(DA_bool_all_converged)],
HMP2=unlist(pvals_runs_HMP2)[!is.na(DA_bool_all_converged)],
perturbation=pvals_perturbation[!is.na(DA_bool_all_converged)],
permutation=pvals_permutation[!is.na(DA_bool_all_converged)],
true=DA_bool_all_converged[!is.na(DA_bool_all_converged)])
give_res_all <- function(pvals_df){
rbind(fullREM=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$pvals_fullREDMSL < 0.05),
fullREDMSL=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$pvals_fullREM <= 0.05),
diagREDMSL=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$pvals_diagREDMSL <= 0.05),
diagREDM=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$pvals_diagREDM <= 0.05),
pvals_chi_Harris=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$pvals_chi_Harris <= 0.05),
ttest=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$ttest_props <= 0.05),
ILR=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$ttest_ilr_adj <= 0.05),
HMP=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$HMP <= 0.05),
HMP2=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$HMP2 <= 0.05),
perturbation=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$perturbation <= 0.05),
permutation=summarise_DA_detection(true = pvals_df$true, predicted = pvals_df$permutation <= 0.05))
}
res_all = give_res_all(pvals_data_frame)
xtable::xtable(res_all)
# xtable::xtable(res_all[,-ncol(res_all)])
res_all <- data.frame(res_all)
res_all$model = rownames(res_all)
res_all
## only results when we haev results for all the models
res_all_common_all_converged <-  give_res_all(pvals_data_frame_all_converged)
res_all_common_all_converged
ggplot(res_all, aes(x=1, y = FPR, col=model))+geom_point()
## group the runs by n, d, etc.
summarise_DA_detection(true = DA_bool, predicted = pvals_fullREDMSL < 0.05)
table(DA_bool, pvals_data_frame$ttest_props <= 0.05)
put_vals_in_table <- function(.pvals){
rbind(fullREM=summarise_DA_detection(true = .pvals$true, predicted = .pvals$pvals_fullREDMSL < 0.05),
fullREDMSL=summarise_DA_detection(true = .pvals$true, predicted = .pvals$pvals_fullREM <= 0.05),
diagREDMSL=summarise_DA_detection(true = .pvals$true, predicted = .pvals$pvals_diagREDMSL <= 0.05),
diagREDM=summarise_DA_detection(true = .pvals$true, predicted = .pvals$pvals_diagREDM <= 0.05),
pvals_chi_Harris=summarise_DA_detection(true = .pvals$true, predicted = .pvals$pvals_chi_Harris <= 0.05),
ttest=summarise_DA_detection(true = .pvals$true, predicted = .pvals$ttest_props <= 0.05),
ILR=summarise_DA_detection(true = .pvals$true, predicted = .pvals$ttest_ilr_adj <= 0.05),
HMP=summarise_DA_detection(true = .pvals$true, predicted = .pvals$HMP <= 0.05),
HMP2=summarise_DA_detection(true = .pvals$true, predicted = .pvals$HMP2 <= 0.05),
perturbation=summarise_DA_detection(true = .pvals$true, predicted = .pvals$perturbation <= 0.05),
permutation=summarise_DA_detection(true = .pvals$true, predicted = .pvals$permutation <= 0.05))
}
give_accuracies_with_varying_var <- function(var, two_var=F, datasets_arg=datasets, pvals_data_frame_arg=pvals_data_frame){
if(two_var){
do.call('rbind', apply(expand.grid(sapply(var, function(i) unique(unlist(sapply(datasets_arg, `[`, i))))), 1, function(vars_it){
.pvals <- pvals_data_frame_arg[which(sapply(datasets_arg, '[', var[1]) == vars_it[[1]] & sapply(datasets_arg, '[', var[2]) == vars_it[[2]]),]
.res_all_subset = put_vals_in_table(.pvals)
.return <- cbind.data.frame(.res_all_subset, VAR1=vars_it[1], VAR2=vars_it[2], model=rownames(.res_all_subset))
colnames(.return)[(ncol(.return)-2)] <- var[1]
colnames(.return)[(ncol(.return)-1)] <- var[2]
return(.return)
}))
}else{
do.call('rbind', lapply(unique(unlist(sapply(datasets_arg, `[`, var))), function(vars_it){
.pvals <- pvals_data_frame_arg[which(sapply(datasets_arg, '[', var) == vars_it),]
.res_all_subset = put_vals_in_table(.pvals)
.return <- cbind.data.frame(.res_all_subset, d=vars_it, model=rownames(.res_all_subset))
colnames(.return)[(ncol(.return)-1)] <- var
return(.return)
}))
}
}
View(joint_df)
pvals_data_frame
View(pvals_data_frame)
dim(joint_df)
dim(pvals_data_frame)
match(rownames(pvals_data_frame), rownames(joint_df))
rownames(pvals_data_frame)[1:2]
rownames(rownames(joint_df))[2]
rownames(joint_df)[1:2]
gsub("_dataset*", "", rownames(pvals_data_frame))
gsub("._dataset*", "", rownames(pvals_data_frame))
gsub(".._dataset*", "", rownames(pvals_data_frame))
gsub(".\._dataset*", "", rownames(pvals_data_frame))
gsub("./._dataset*", "", rownames(pvals_data_frame))
gsub("..\_dataset*", "", rownames(pvals_data_frame))
gsub("\.._dataset*", "", rownames(pvals_data_frame))
gsub("_dataset*$", "", rownames(pvals_data_frame))
gsub("_dataset*", "", rownames(pvals_data_frame))
gsub(".\\._dataset*", "", rownames(pvals_data_frame))
gsub(".\\_dataset*", "", rownames(pvals_data_frame))
sapply(rownames(pvals_data_frame), function(i) strsplit(i)[[1]][1])
sapply(rownames(pvals_data_frame), function(i) strsplit(i, 'dataset')[[1]][1])
sapply(rownames(pvals_data_frame), function(i) strsplit(i, '_dataset')[[1]][1])
match(sapply(rownames(pvals_data_frame), function(i) strsplit(i, '_dataset')[[1]][1]),
sapply(rownames(joint_df), function(i) strsplit(i, '_dataset')[[1]][1]))
match_pvals_params <- match(sapply(rownames(pvals_data_frame), function(i) strsplit(i, '_dataset')[[1]][1]),
sapply(rownames(joint_df), function(i) strsplit(i, '_dataset')[[1]][1]))
dim(pvals_data_frame)
match_pvals_params <- match(sapply(rownames(joint_df), function(i) strsplit(i, '_dataset')[[1]][1]),
sapply(rownames(pvals_data_frame), function(i) strsplit(i, '_dataset')[[1]][1]))
length(match_pvals_params)
dim(pvals_data_frame)
pvals_data_frame[match_pvals_params,]
cbind(joint_df, pvals_data_frame[match_pvals_params,])
joint_df <- cbind(joint_df, pvals_data_frame[match_pvals_params,])
joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,]
head(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,])
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_diagREDM))+geom_histogram()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_fullREDM))+geom_histogram()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_fullREDMSL))+geom_histogram()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_diagREDM))+geom_density()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_diagREDM))+geom_histogram()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_fullREDMSL))+geom_histogram()
ggplot(joint_df[joint_df$fullRE_M.beta_gamma_shape == 0,], aes(x=pvals_diagREDMSL))+geom_histogram()
ggplot(varying_n, aes(x=factor(model,
levels=sort_first_col_by_second(varying_n %>%
dplyr::group_by(model) %>%
dplyr::summarise(median(WeightedAccuracy, na.rm = T)))),
y = WeightedAccuracy, group=model, col=model))+geom_boxplot()+geom_jitter()+theme_bw()+
scale_color_manual(values=colours_models)+ggtitle(generation)+guides(col=FALSE)+
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
