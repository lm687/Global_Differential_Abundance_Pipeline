joint_counts_CN %>% filter(CN.gene_name %in% topvariable)
joint_counts_CN$topvariable$V1
topvariable$V1
joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1)
head()
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))
ggplot(joint_counts_CN %>% filter(CN.gene_name %in% topvariable$V1), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i)
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TMB_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+ggtitle(i))
}
dev.off()
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
}
dev.off()
warnings()
i=topvariable$V1[1]
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+geom_point()+ggtitle(i))
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, col=CN.gene_name))+
geom_point()+geom_smooth()+ggtitle(i))
head(joint_counts_CN)
require(ggrepel)
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel())
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
pdf("~/Desktop/Vias/figures/joint_counts_CN_TPM_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=counts.value, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
rm(list = ls())
require(ggplot2)
require(ggrepel)
require(dplyr)
joint_counts_CN = readRDS("~/Desktop/joint_counts_CN_TPM_20210301210511.RDS")
head(joint_counts_CN)
ggplot(joint_counts_CN %>% filter(CN.L1 == '119025org' ), aes(x=CN.value, y=counts.value))+geom_point()
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv")
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',')
head(deseq_counts)
## now add DESeq counts
deseq_counts = read.table("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/counts_norm.csv",
sep=',', header = T)
head(deseq_counts)
head(melt(deseq_counts))
require(reshape2)
head(melt(deseq_counts))
deseq_counts = (melt(deseq_counts))
colnames(deseq_counts) = c('Gene', 'DESEq.sample', 'DESeq.count')
require(biomaRt)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl <- useEnsembl(biomart = "genes")
ensembl <- useDataset(dataset = "hsapiens_gene_ensembl", mart = ensembl)
ensembl
rownames(deseq_counts)
deseq_counts$Gene
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = mart, useCache = FALSE)
t2g <- getBM(
attributes = c('ensembl_gene_id', 'external_gene_name'),
values = deseq_counts$Gene,
filter = 'ensembl_gene_id',
mart = ensembl, useCache = FALSE)
saveRDS(t2g, file = "~/Desktop/t2g.RDS")
entrezgene_id_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
head(entrezgene_id_matched)
head(deseq_counts$Gene)
rm(entrezgene_id_matched)
genename_ensmid_matched = t2g[match(deseq_counts$Gene, t2g$ensembl_gene_id),'external_gene_name']
genename_ensmid_matched
deseq_counts$Gene = genename_ensmid_matched
joint_counts_CN$CN.gene_name
joint_counts_CN$CN.L1
joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name)
head(deseq_counts)
readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming = readxl::read_xlsx("/Users/morril01/Documents/PhD/other_repos/b_tape/Vias_Brenton/RNASeq_DE_resistant_sensitive/files/PDOnameProperSample_sWGS_RNAseq.xlsx")
renaming
deseq_counts$DESEq.sample
match(gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), joint_counts_CN$CN.L1)
gsub("[.]", "-", deseq_counts$DESEq.sample)
joint_counts_CN$CN.L1
renaming
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
match(renaming$sampleNameRNAseq, gsub("[.]", "-", deseq_counts$DESEq.sample))
match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)
head(renaming)
renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
joint_counts_CN$CN.gene_name
deseq_counts$DESEq.sample = renaming$ID[match(gsub("[.]", "-", deseq_counts$DESEq.sample), renaming$sampleNameRNAseq)]
paste0(deseq_counts$DESEq.sample)
paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)
match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene))
deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),]
dim(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
dim(joint_counts_CN)
head(deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN = cbind.data.frame(joint_counts_CN, deseq_counts[match(paste0(joint_counts_CN$CN.L1, joint_counts_CN$CN.gene_name), paste0(deseq_counts$DESEq.sample, deseq_counts$Gene)),])
joint_counts_CN[1,]
joint_counts_CN[4,]
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all.pdf", width=10, height=10)
ggplot(joint_counts_CN, aes(x=CN.value, y=DESeq.count))+geom_point()+facet_wrap(.~CN.L1, scales = "free")+theme_bw()+
scale_x_continuous(trans = "log2")+scale_y_continuous(trans = "log2")
ggsave("~/Desktop/Vias/figures/joint_counts_CN_DESeq_all_loglog.pdf", width=10, height=8)
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
topvariable = read.table("~/Desktop//Vias/top_variable.txt", comment.char = "#")
pdf("~/Desktop/Vias/figures/joint_counts_CN_DESeq_topvar.pdf")
for(i in topvariable$V1){
print(ggplot(joint_counts_CN %>% filter(CN.gene_name == i), aes(x=CN.value, y=DESeq.count, label=CN.L1))+
geom_point()+geom_smooth()+ggtitle(i)+geom_label_repel()+theme_bw())
}
dev.off()
plot(joint_counts_CN$counts.value, joint_counts_CN$DESeq.count)
library(survival)
library(survival)
library(survminer)
library(lubridate)
library(dplyr)
library(ggplot2)
survival<-read.csv("../data/OrganoidSurvival.csv")
ggplot(data = survival) +
geom_bar(mapping = aes(x = PassageNumber,fill=Tissue))
# pdf("04022021_survival.pdf",height = 7, width =10)
s1 <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(s1, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
# png("survivalRisk.png", height = 7, width =10)
s1 <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(km.as.one, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
# png("survivalRisk.png", height = 7, width =10)
km.as.one <- survfit(formula=Surv(CulturedTime, Death==1) ~Tissue, data = survival, conf.type = "log-log")
ggsurvplot(km.as.one, conf=TRUE,legend.labs = c("Ascites", "Solid", "xenograft"), pval = TRUE, risk.table = TRUE)
summary(s1)
m <- coxph(formula=Surv(CulturedTime, Death==1)~Tissue, data=survival)
ggforest(m, data = survival)
summary(m)
anova(m)
# pdf("survivalCox.pdf", height = 7, width = 10)
survival %>% ggplot(aes(x = Tissue, y = CulturedTime)) + geom_boxplot(notch = TRUE, aes(colour = Tissue), alpha = 0.8) + geom_point(aes(colour = Tissue), position = position_jitterdodge()) + theme_bw() + labs(x = "Tissue type", y = "Time") + theme(text = element_text(size = 14, family = "sans"), axis.text = element_text(size = 12, family = "sans"), legend.position = "right") + stat_compare_means(method = "wilcox.test", comparisons = survival)+
stat_compare_means(label.y = 50)
library(readr)
library(tidyverse)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
micewlatest.df
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(readr)
library(tidyverse)
library(dplyr)
library(cowplot)
micewlatest = read_csv("../data/19.08.2020_MiceW.csv")
micewlatest.df <- as.data.frame(micewlatest)
plot.micewlatest <- ggplot(micewlatest.df, aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 0.5) +
theme(axis.text.x = element_text(angle= 30, size = 5),strip.text.x = element_text(size = 8, colour = "red"))+
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight") +
facet_wrap(. ~ paste(pdo, mouseNumber), nrow = 2) +
panel_border()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
plot.micewlatest + scale_x_continuous(breaks = seq(0, 500, by = 100)) + scale_y_log10()
save_plot("../figures/19.08.2020_micew.pdf", plot.micewlatest)
#plots individually
#PDO1
plot.PDO1 <- micewlatest.df %>%
filter(mouseNumber == "472") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 472") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 100)) + scale_y_log10()
plot.PDO1
save_plot("../figures/PDO1.pdf", plot.PDO1)
#PDO2
plot.PDO2 <- micewlatest.df %>%
filter(mouseNumber == "475") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 475") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO2
save_plot("../figures/PDO2.pdf", plot.PDO2)
#PDO3
plot.PDO3 <- micewlatest.df %>%
filter(mouseNumber == "643") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 643") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO3
save_plot("../figures/PDO3.pdf", plot.PDO3)
#PDO4
plot.PDO4 <- micewlatest.df %>%
filter(mouseNumber == "642") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 642") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO4
save_plot("../figures/PDO4.pdf", plot.PDO4)
#PDO5
plot.PDO5 <- micewlatest.df %>%
filter(mouseNumber == "645") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 645") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO5
save_plot("../figures/PDO5.pdf", plot.PDO5)
#PDO8
plot.PDO8 <- micewlatest.df %>%
filter(mouseNumber == "466") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 466") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO8
save_plot("../figures/PDO8.pdf", plot.PDO8)
#PDO10
plot.PDO10 <- micewlatest.df %>%
filter(mouseNumber == "471") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 471") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO10
save_plot("../figures/PDO10.pdf", plot.PDO10)
#PDO12
plot.PDO12 <- micewlatest.df %>%
filter(mouseNumber == "468") %>%
ggplot(aes(x=days, y=weight)) +
geom_point(color= "darkgreen", size = 1) +
geom_smooth(method = "lm") +
labs(x = "Days", y = "Weight", title="Mouse 468") +
theme(panel.background = element_rect(fill = NA), axis.text.x = element_text(angle= 30, size = 10)) + scale_x_continuous(breaks = seq (0, 500, 50)) + scale_y_log10()
plot.PDO12
save_plot("../figures/PDO12.pdf", plot.PDO12)
library(tidyverse)
library(readr)
PDS_PDO <- read_csv("../data/20191107-auc.csv")
View(X20191107_auc)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO$sample <- as.factor(PDS_PDO$sample)
PDS_PDO.plot<- ggplot(data = PDS_PDO, aes(auc_ll5.sph, auc_ll5.org, colour = sample))+
geom_point() +
labs(x="Patient-derived spheroids", y="Patient-derived organoids")+
theme_classic() +
geom_smooth(method=lm, se=FALSE)
cor.test(PDS_PDO$auc_ll5.org, PDS_PDO$auc_ll5.sph, method = "pearson", conf.level = 0.95)
plot(PDS_PDO.plot)
passagesorganoids <- read_csv ("../data/AUCdifferentPassagesW.csv")
passagesorganoids$sample <- as.factor(passagesorganoids$sample)
passagesorganoids<-spread(passagesorganoids, key=passage, value=AUC)
passagesorganoid.plot<- ggplot(data = passagesorganoids, aes(early, late, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
plot(passagesorganoid.plot)
bioreporganoids <- read_csv ("../data/AUCbiolrepW.csv")
bioreporganoids$sample <- as.factor(bioreporganoids$sample)
bioreporganoids<-spread(bioreporganoids, key=replicate, value=AUC)
bioreporganoid.plot<- ggplot(data = bioreporganoids, aes(rep1, rep2, colour = sample))+
geom_point() +
theme_classic() +
geom_smooth(method=lm)
cor.test(bioreporganoids$rep1, bioreporganoids$rep2, method = "pearson", conf.level = 0.95)
plot(bioreporganoid.plot)
install.packages("googlesheets")
googlesheets::gs_url("https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0")
remove.packages("googlesheets")
install.packages('gsheet')
library(gsheet)
gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file$`<!DOCTYPE html>`
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file = gsheet2text('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
summary_file = gsheet2tbl('https://docs.google.com/spreadsheets/d/1ulHgNIMsoFECt8cim2va5pTXu3LaCJlqaiSfvTCPAxs/edit#gid=0"')
summary_file
xtable::xtable(summary_file)
require(GSVA)
require(GSVAdata)
c2BroadSets
#--------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------#
data(c2BroadSets) ## from GSVAdata
c2BroadSets
c2BroadSets$NAKAMURA_CANCER_MICROENVIRONMENT_UP
c2BroadSets
c2BroadSets$NAKAMURA_CANCER_MICROENVIRONMENT_DN
names(c2BroadSets)
names(c2BroadSets)[grep('microenvironment', names(c2BroadSets))]
View(names(c2BroadSets))
vignette(gsvaData)
vignette("gsvaData")
vignette("GSVAData")
vignette
vignette("GSVAdata")
?GSVAdata
rm(list = ls())
setwd("~/Documents/PhD/GlobalDA/code/2_inference_TMB/")
library(TMB)
library(ggplot2)
library(dplyr)
source("mm_multinomial/helper_functions.R")
source("helper_TMB.R")
source("../2_inference/helper/helper_DA_stan.R") ## for normalise_rw
source("../../../CDA_in_Cancer/code/functions/meretricious/pretty_plots/prettySignatures.R")
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/fullRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/fullRE_ME_dirichletmultinomial"))
unique(sapply(list.files("../../data/roo/"), function(i) strsplit(i, '_')[[1]][1]))
Kidney_RCC_clearcell = load_PCAWG("Kidney-RCC.clearcell", typedata="signatures", path_to_data = "../../data/")
Kidney_RCC_clearcell$Y[,c('SBS12', 'SBS41')]
xxx = give_subset_sigs_TMBobj(Kidney_RCC_clearcell, sigs_to_remove = c('SBS12', 'SBS41'))
sort(colSums(Kidney_RCC_clearcell$Y))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/FE_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/FE_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/diagRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/diagRE_ME_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/FE_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/FE_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/diagRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/diagRE_ME_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov"))
res_sparse <- wrapper_run_TMB_debug(object = Kidney_RCC_clearcell, iter.max = 500, init_log_lambda = 3, return_report = T, model = "sparseRE_DM",
idx_cov_to_fill=c(2L, 3L, 6L)-1)
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial"))
res_sparse <- wrapper_run_TMB_debug(object = Kidney_RCC_clearcell, iter.max = 500, init_log_lambda = 3, return_report = T, model = "sparseRE_DM",
idx_cov_to_fill=c(2L, 3L, 6L)-1) ## idx_cov_to_fill must be zero-indexed
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial"))
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial_singlecov"))
res_sparse <- wrapper_run_TMB_debug(object = Kidney_RCC_clearcell, iter.max = 500, init_log_lambda = 3, return_report = T, model = "sparseRE_DM",
idx_cov_to_fill=c(2L, 3L, 6L)-1) ## idx_cov_to_fill must be zero-indexed
res_sparse
TMB::compile("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial.cpp", "-std=gnu++17")
dyn.load(dynlib("../../current/Dirichlet_Multinomial_Dom/code/TMB_models/sparseRE_ME_dirichletmultinomial"))
res_sparse <- wrapper_run_TMB_debug(object = Kidney_RCC_clearcell, iter.max = 500, init_log_lambda = 3, return_report = T, model = "sparseRE_DM",
idx_cov_to_fill=c(2L, 3L, 6L)-1) ## idx_cov_to_fill must be zero-indexed
res_sparse
## signatures to keep (not including the baseline, which is included by definition:
sigs_to_keep_cov = c('SBS1', 'SBS6', 'SBS22', 'SBS29', 'SBS40')
sorted_cols <- sort(colSums(Kidney_RCC_clearcell$Y), decreasing = F)
sigs_to_keep_cov <- sigs_to_keep_cov[-match(names(sorted_cols[ncol(Kidney_RCC_clearcell$Y)]), sigs_to_keep_cov)]
colnames_all = names(sorted_cols[-ncol(Kidney_RCC_clearcell$Y)])
diag_cov_names = outer((colnames_all), (colnames_all), function(i,j) paste0(i, '-', j))
diag_cov_names_lower = diag_cov_names[lower.tri(diag_cov_names)]
colnames_good = as.vector(outer(sigs_to_keep_cov, sigs_to_keep_cov, function(i,j) paste0(i, '-', j)))
idx_cov_to_infer = match(diag_cov_names_lower, colnames_good)
idx_cov_to_infer = idx_cov_to_infer[!is.na(idx_cov_to_infer)]
idx_cov_to_infer
cat(paste(idx_cov_to_infer, 'L'))
cat(paste0(idx_cov_to_infer, 'L'))
cat(paste0(idx_cov_to_infer, 'L', sep=','))
res_sparse <- wrapper_run_TMB_debug(object = Kidney_RCC_clearcell, iter.max = 500, init_log_lambda = 3, return_report = T, model = "sparseRE_DM",
idx_cov_to_fill=c(2L, 4L, 3L, 8L, 7L, 15L)-1) ## idx_cov_to_fill must be zero-indexed
res_sparse
